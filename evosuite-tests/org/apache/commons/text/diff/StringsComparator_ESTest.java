/*
 * This file was automatically generated by EvoSuite
 * Thu Jun 22 09:39:34 GMT 2023
 */

package org.apache.commons.text.diff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.text.diff.EditScript;
import org.apache.commons.text.diff.StringsComparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringsComparator_ESTest extends StringsComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringsComparator stringsComparator0 = new StringsComparator("mR", "mR");
      stringsComparator0.getScript();
      StringsComparator stringsComparator1 = new StringsComparator("org.apache.commons.text.diff.StringsComparator$Snake", "org.apache.commons.text.diff.StringsComparator$Snake");
      stringsComparator1.getScript();
      stringsComparator1.getScript();
      stringsComparator1.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator1.getScript();
      stringsComparator1.getScript();
      stringsComparator1.getScript();
      stringsComparator1.getScript();
      stringsComparator0.getScript();
      StringsComparator stringsComparator2 = new StringsComparator("mR", "mR");
      stringsComparator2.getScript();
      stringsComparator2.getScript();
      stringsComparator2.getScript();
      stringsComparator1.getScript();
      stringsComparator1.getScript();
      StringsComparator stringsComparator3 = new StringsComparator("org.apache.commons.text.diff.InsertCommand", "org.apache.commons.text.diff.StringsComparator$Snake");
      stringsComparator3.getScript();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringsComparator stringsComparator0 = null;
      try {
        stringsComparator0 = new StringsComparator((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.diff.StringsComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringsComparator stringsComparator0 = new StringsComparator("org.apache.commons.text.diff.DeleteCommand", "#BQ!8o`7R{er&6H\"");
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      // Undeclared exception!
      stringsComparator0.getScript();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringsComparator stringsComparator0 = new StringsComparator("V1fe6lkpb,D^4orUMY", "org.apache.commons.text.diff.StringsComparator");
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      // Undeclared exception!
      stringsComparator0.getScript();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringsComparator stringsComparator0 = new StringsComparator("org.apache.commons.text.diff.InsertCommand", "org.apache.commons.text.diff.EditScript");
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      // Undeclared exception!
      stringsComparator0.getScript();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringsComparator stringsComparator0 = new StringsComparator("IC||vZE*.Ke%", "Z^En7#t/\u00079W");
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      EditScript<Character> editScript0 = stringsComparator0.getScript();
      assertEquals(20, editScript0.getModifications());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringsComparator stringsComparator0 = new StringsComparator("", "t&L# a?,k`");
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      EditScript<Character> editScript0 = stringsComparator0.getScript();
      assertEquals(10, editScript0.getModifications());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringsComparator stringsComparator0 = new StringsComparator("'E$|da", "ykO+Vjn8");
      EditScript<Character> editScript0 = stringsComparator0.getScript();
      assertEquals(14, editScript0.getModifications());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringsComparator stringsComparator0 = new StringsComparator("'E$|da", "org.apache.commons.text.diff.InsertCommand");
      EditScript<Character> editScript0 = stringsComparator0.getScript();
      assertEquals(44, editScript0.getModifications());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringsComparator stringsComparator0 = new StringsComparator("org.apache.commons.text.diff.KeepCommand", "org.apache.commons.text.diff.InsertCommand");
      EditScript<Character> editScript0 = stringsComparator0.getScript();
      assertEquals(8, editScript0.getModifications());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringsComparator stringsComparator0 = new StringsComparator("''", "");
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      EditScript<Character> editScript0 = stringsComparator0.getScript();
      assertEquals(2, editScript0.getModifications());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringsComparator stringsComparator0 = new StringsComparator("$Be#3<v[0A}lc;8c", "7tSoS0&{{kAe");
      EditScript<Character> editScript0 = stringsComparator0.getScript();
      assertEquals(24, editScript0.getModifications());
      
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      EditScript<Character> editScript1 = stringsComparator0.getScript();
      assertEquals(2, editScript1.getLCSLength());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringsComparator stringsComparator0 = new StringsComparator("}8*3", "}8*3");
      EditScript<Character> editScript0 = stringsComparator0.getScript();
      assertEquals(0, editScript0.getModifications());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringsComparator stringsComparator0 = new StringsComparator("org.apache.commons.text.diff.StringsComparator$Snake", "org.apache.commons.text.diff.StringsComparator$Snake");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringsComparator stringsComparator0 = new StringsComparator("org.apache.commons.text.diff.EditCommand", "org.apache.commons.text.diff.EditCommand");
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      EditScript<Character> editScript0 = stringsComparator0.getScript();
      assertEquals(0, editScript0.getModifications());
      
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      stringsComparator0.getScript();
      EditScript<Character> editScript1 = stringsComparator0.getScript();
      assertEquals(0, editScript1.getModifications());
  }
}
